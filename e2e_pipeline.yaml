---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: e2e-pipeline
spec:
  params:
    - name: branch-name
      type: string
      description: Branch within the source repository
    - name: repo-url
      type: string
      description: URL of the source repository
    - name: SOURCE_ARTIFACT
      description: URI of the trusted artifact containing the built source
    - name: e2e_proxy
      description: http proxy
    - name: E2E_USER
      description: Test automation username
    - name: E2E_PASSWORD
      description: Test automation password
  workspaces:
    - name: shared-code-workspace
      description: Workspace for passing repo source to the test run task
  tasks:
    - name: fetch-source
      taskRef:
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-code-workspace
      params:
        - name: url
          value: $(params.repo-url)
        - name: revision
          value: $(params.branch-name)
    - name: e2e-test-run
      taskRef:
        name: e2e-task
      workspaces:
        - name: shared-code-workspace
          workspace: shared-code-workspace
      runAfter:
        - fetch-source
      params:
        - name: SOURCE_ARTIFACT
          value: $(params.SOURCE_ARTIFACT)
        - name: HTTP_PROXY
          value: $(params.e2e_proxy)
        - name: E2E_USER
          value: $(params.E2E_USER)
        - name: E2E_PASSWORD
          value: $(params.E2E_PASSWORD)
        - name: e2e-tests-script
          value: |
            # TODO: add logic to wait until the server and proxy are ready
            echo "HTTP_PROXY is ${HTTP_PROXY}"
            echo "HTTPS_PROXY is ${HTTPS_PROXY}"
            # host stage.foo.redhat.com
            cd /workspace/output
            sleep 2000
            whoami
            npm install
            npx playwright test playwright/*
           
